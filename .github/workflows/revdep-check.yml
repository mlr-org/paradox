# r cmd check workflow of the mlr3 ecosystem v0.1.0
# https://github.com/mlr-org/actions
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: revdep-check

jobs:
  revdep-check:
    runs-on: ${{ matrix.config.os }}

    name: revdep ${{ matrix.config.pkg }} (${{ matrix.config.os }}, ${{ matrix.config.r }})

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release', pkg: 'mlr-org/mlr3'}
          - {os: ubuntu-latest,   r: 'release', pkg: 'mlr-org/mlr3pipelines'}
          - {os: ubuntu-latest,   r: 'release', pkg: 'mlr-org/bbotk'}
          - {os: ubuntu-latest,   r: 'release', pkg: 'mlr-org/miesmuschel'}
          - {os: ubuntu-latest,   r: 'release', pkg: 'mlr-org/mlr3mbo'}
          - {os: ubuntu-latest,   r: 'release', pkg: 'mb706/mlrintermbo'}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.config.pkg }}

      - uses: r-lib/actions/setup-pandoc@v2
        if: matrix.config.pkg == 'mlr-org/mlr3mbo'

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: supercharge/redis-github-action@1.7.0
        if: contains(fromJSON('["mlr-org/bbotk", "mlr-org/mlr3mbo"]'), matrix.config.pkg)
        with:
          redis-version: 7

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Install dev versions
        run: pak::pkg_install('${{ GITHUB_REPOSITORY }}@${{ GITHUB_REF_NAME }}')
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        name: Normal check
        if: ${{ !contains(fromJSON('["mlr-org/bbotk", "mlr-org/mlr3mbo"]'), matrix.config.pkg) }}

      - uses: r-lib/actions/check-r-package@v2
        name: bbotk check
        if: contains(fromJSON('["mlr-org/bbotk", "mlr-org/mlr3mbo"]'), matrix.config.pkg)
        with:
          args: 'c("--no-manual")' # "--as-cran" prevents to start external processes
